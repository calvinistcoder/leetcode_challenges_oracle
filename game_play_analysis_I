Create table If Not Exists Activity (player_id int, device_id int, event_date date, games_played int)
Truncate table Activity
insert into Activity (player_id, device_id, event_date, games_played) values ('1', '2', '2016-03-01', '5')
insert into Activity (player_id, device_id, event_date, games_played) values ('1', '2', '2016-05-02', '6')
insert into Activity (player_id, device_id, event_date, games_played) values ('2', '3', '2017-06-25', '1')
insert into Activity (player_id, device_id, event_date, games_played) values ('3', '1', '2016-03-02', '0')
insert into Activity (player_id, device_id, event_date, games_played) values ('3', '4', '2018-07-03', '5')
  
Table: Activity
+--------------+---------+
| Column Name  | Type    |
+--------------+---------+
| player_id    | int     |
| device_id    | int     |
| event_date   | date    |
| games_played | int     |
+--------------+---------+
(player_id, event_date) is the primary key (combination of columns with unique values) of this table.
This table shows the activity of players of some games.
Each row is a record of a player who logged in and played a number of games (possibly 0) before logging out on someday using some device.


El enunciado del problema: 
Write a solution to find the first login date for each player.
Return the result table in any order.


Soluci칩n:
SELECT player_id "player_id", TO_CHAR(MIN(event_date),'YYYY-MM-DD') as "first_login"
FROM Activity
GROUP BY player_id

Explicaci칩n:
utilizo un select para seleccionar el output deseado y agrupando los datos de los jugadores(datos que se repiten y se asocian a un mismo jugador)
se buscan en el grupo de datos player_id para seleccionar el evento m치s peque침o del grupo de jugadores y solo se mofidica con un to date para 
mostrar los datos deseados. 

| player_id | first_login |
| --------- | ----------- |
| 1         | 2016-03-01  |
| 2         | 2017-06-25  |
| 3         | 2016-03-02  |
